import math

def heun(f, x0, y0, h_values, n):
    for k in range(n):
        h = h_values[k]
        m1 = f(x0, y0)
        m2 = f(x0 + h, y0 + h * m1)
        y0 += h * (m1 + m2) / 2
        x0 += h
        yield[x0, y0]
        
def f(t, i):
    C = 0.2875
    R = 1.4833
    L = 1.6993
    
    return C * segunda_derivada_tensao(t) + (1/R) * derivada_tensao(t) + (1/L) * tensao(t)
    
    
def tensao(t):
    expoente = -0.0505
    # calcular 1 e 2 derivada no wolfram
    # e^(expoente*pi*t) * sin(2 * t - pi) 
    return math.exp(expoente * math.pi * t) * math.sin(2 * t - math.pi)
    
def derivada_tensao(t):
    expo1 = -0.15865
    coef = -0.0793252
    return -2 * math.exp(expo1*t) * (math.cos(2 * t) + coef * math.sin(2 * t))
    
def segunda_derivada_tensao(t):
    expoe = -0.15865
    coefcos = 0.634601
    coefsin = 3.97483
    
    return math.exp(expoe*t) * (coefcos * math.cos(2 * t) + coefsin * math.sin(2 * t))

t0 = 0
i0 = 0
t_values = [0.0516, 0.1409, 0.236, 0.3806, 0.4611, 0.5354, 0.6223, 0.7177, 0.8733, 0.9693, 1.0452, 1.1331, 1.2291, 1.345, 1.4303, 1.5327, 1.6542, 1.7865, 1.834, 1.9309, 2.0242, 2.1608, 2.2659, 2.3512, 2.477, 2.5871, 2.6429, 2.7204, 2.8143, 2.9434, 3.0523, 3.1468, 3.2168, 3.3243, 3.4823, 3.55, 3.6291, 3.7332, 3.8697, 3.9238, 4.0724, 4.1479, 4.2613, 4.3542, 4.4117, 4.5239, 4.6188, 4.7326, 4.8228, 4.9383, 5.0493, 5.1456, 5.2857, 5.3176, 5.4746, 5.5708, 5.6787, 5.7268, 5.835, 5.9686, 6.0356, 6.1612, 6.2257, 6.317, 6.4787, 6.5198, 6.6342, 6.7562, 6.8373, 6.9374, 7.0448, 7.1122, 7.2517, 7.3766, 7.452, 7.5778, 7.6756, 7.7563, 7.8588, 7.9188, 8.0731, 8.1419, 8.274, 8.3516, 8.4133, 8.5839, 8.6679, 8.7233, 8.8492, 8.9426, 9.0805, 9.1827, 9.2505, 9.3187, 9.4394, 9.5706, 9.681, 9.7672, 9.879, 9.9614, 10.0281, 10.1292, 10.2545, 10.3766, 10.4257, 10.5223, 10.6893, 10.729, 10.8283, 10.9413, 11.0608, 11.1295, 11.2831, 11.3146, 11.449, 11.5251, 11.6273, 11.7467, 11.8172, 11.9493, 12.0763, 12.1182, 12.266, 12.3278, 12.474, 12.5523, 12.6375, 12.7766, 12.8179, 12.9493, 13.0661, 13.1428, 13.2824, 13.3292, 13.4776, 13.5333, 13.6111, 13.7455, 13.8148, 13.9784, 14.0493, 14.1792, 14.2466, 14.3664, 14.4543, 14.5694, 14.663, 14.7393, 14.8578, 14.9336]
n = 150

t_values.insert(0, t0)
h_values = []
for i in range(len(t_values)-1):
    h_values.append(t_values[i+1] - t_values[i])

r = heun(f, t0, i0, h_values, n)

yt = []
for yi in r:
    yt.append(yi[1])
    
print(yt)
